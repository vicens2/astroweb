---
// No server-side code needed for this component
---

<!-- Checkout Modal -->
<div id="checkout-modal" class="fixed inset-0 z-50 hidden overflow-y-auto" aria-labelledby="modal-title" role="dialog" aria-modal="true">
  <div class="flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true" onclick="closeCheckoutModal()"></div>
    <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
    
    <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-2xl sm:w-full">
      <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
        <div class="sm:flex sm:items-start">
          <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full">
            <div class="flex justify-between items-start">
              <h3 class="text-2xl leading-6 font-bold text-gray-900 mb-6" id="modal-title">
                Solicitar selección
              </h3>
              <button type="button" class="text-gray-400 hover:text-gray-500" onclick="closeCheckoutModal()">
                <span class="sr-only">Cerrar</span>
                <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>

            <form id="checkout-form" class="space-y-4">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label for="name" class="block text-sm font-medium text-gray-700">Nombre completo *</label>
                  <input type="text" name="name" id="name" required
                    class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                </div>
                
                <div>
                  <label for="email" class="block text-sm font-medium text-gray-700">Email *</label>
                  <input type="email" name="email" id="email" required
                    class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                </div>
                
                <div>
                  <label for="phone" class="block text-sm font-medium text-gray-700">Teléfono *</label>
                  <input type="tel" name="phone" id="phone" required
                    class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                </div>
                
                <div>
                  <label for="event-date" class="block text-sm font-medium text-gray-700">Fecha del evento *</label>
                  <input type="date" name="eventDate" id="event-date" required min=""
                    class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                </div>
                
                <div>
                  <label for="start-time" class="block text-sm font-medium text-gray-700">Hora de inicio *</label>
                  <input type="time" name="startTime" id="start-time" required
                    class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                </div>
                
                <div class="md:col-span-2">
                  <label for="location" class="block text-sm font-medium text-gray-700">Lugar del evento *</label>
                  <input type="text" name="location" id="location" required
                    class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                </div>
                
                <div class="md:col-span-2">
                  <label for="notes" class="block text-sm font-medium text-gray-700">Notas adicionales</label>
                  <textarea name="notes" id="notes" rows="3"
                    class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500"></textarea>
                </div>
              </div>
              
              <div class="mt-6">
                <button type="submit" id="send-request-btn"
                  class="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                  Enviar solicitud
                </button>
              </div>
              
              <div id="form-message" class="hidden mt-4 p-3 rounded"></div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Popup de notificación -->
<div id="checkoutNotification" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
  <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg max-w-sm w-full mx-4">
    <div id="checkoutNotificationIcon" class="text-4xl mb-4 text-center">
      <!-- Ícono de éxito (se mostrará por defecto) -->
      <div class="checkout-success-icon hidden">
        <svg class="w-16 h-16 text-green-500 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
        </svg>
      </div>
      <!-- Ícono de error -->
      <div class="checkout-error-icon hidden">
        <svg class="w-16 h-16 text-red-500 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </div>
    </div>
    <h3 id="checkoutNotificationTitle" class="text-xl font-bold text-gray-900 dark:text-white mb-2 text-center">¡Éxito!</h3>
    <p id="checkoutNotificationMessage" class="text-gray-700 dark:text-gray-300 mb-6 text-center">Tu solicitud ha sido enviada correctamente.</p>
    <button id="closeCheckoutNotification" class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors">
      Aceptar
    </button>
  </div>
</div>

<script>
  // Función para mostrar notificación
  function showCheckoutNotification(isSuccess: boolean, message: string) {
    const popup = document.getElementById('checkoutNotification');
    const title = document.getElementById('checkoutNotificationTitle');
    const notificationMessage = document.getElementById('checkoutNotificationMessage');
    const successIcon = document.querySelector<HTMLElement>('.checkout-success-icon');
    const errorIcon = document.querySelector<HTMLElement>('.checkout-error-icon');
    
    if (!popup || !title || !notificationMessage || !successIcon || !errorIcon) return;
    
    if (isSuccess) {
      title.textContent = '¡Éxito!';
      successIcon.classList.remove('hidden');
      errorIcon.classList.add('hidden');
    } else {
      title.textContent = 'Error';
      successIcon.classList.add('hidden');
      errorIcon.classList.remove('hidden');
    }
    
    notificationMessage.textContent = message;
    popup.classList.remove('hidden');
    document.body.style.overflow = 'hidden';
  }

  // Cerrar notificación
  const closeCheckoutNotification = document.getElementById('closeCheckoutNotification');
  closeCheckoutNotification?.addEventListener('click', () => {
    const popup = document.getElementById('checkoutNotification');
    popup.classList.add('hidden');
    document.body.style.overflow = 'auto';
  });

  // Cerrar al hacer clic fuera del popup
  const checkoutNotification = document.getElementById('checkoutNotification');
  checkoutNotification?.addEventListener('click', (e) => {
    if (e.target === checkoutNotification) {
      checkoutNotification.classList.add('hidden');
      document.body.style.overflow = 'auto';
    }
  });

  // Set minimum date to today
  document.addEventListener('DOMContentLoaded', function() {
    const today = new Date().toISOString().split('T')[0];
    const eventDateInput = document.getElementById('event-date') as HTMLInputElement;
    if (eventDateInput) {
      eventDateInput.min = today;
    }
  });
  
  // Handle form submission
  const form = document.getElementById('checkout-form');
  if (!form) return;
  
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const submitButton = form.querySelector('button[type="submit"]');
    const originalButtonText = submitButton?.textContent || 'Enviar solicitud';
    const formMessage = document.getElementById('form-message');
    
    try {
      // Show loading state
      if (submitButton) {
        submitButton.disabled = true;
        submitButton.textContent = 'Enviando...';
        submitButton.style.opacity = '0.7';
      }
      
      // Get form data
      const formData = new FormData(form);
      const formValues = Object.fromEntries(formData.entries());
      
      // Get cart items from localStorage
      let cartItems = [];
      try {
        const savedCart = localStorage.getItem('cart');
        if (savedCart) {
          cartItems = JSON.parse(savedCart);
        }
      } catch (error) {
        console.error('Error loading cart items:', error);
      }
      
      // Add cart items to form data
      const requestData = {
        ...formValues,
        cartItems
      };
      
      // Send data to Netlify function
      const response = await fetch('/.netlify/functions/checkout', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(requestData)
      });
      
      const result = await response.json();
      
      if (!response.ok) {
        throw new Error(result.message || 'Error al enviar la solicitud');
      }
      
      // Show success message
      showCheckoutNotification(true, '¡Solicitud enviada con éxito! Nos pondremos en contacto contigo pronto.');
      
      // Reset form and close modal
      form.reset();
      closeCheckoutModal();
      
      // Clear cart
      localStorage.removeItem('cart');
      
      // Update cart UI if available
      if (window.cart) {
        window.cart.updateUI();
      }
      
    } catch (error) {
      console.error('Error submitting form:', error);
      // Only show error notification if it's not a successful response after a retry
      if (!error.message.includes('Error al enviar el correo')) {
        showCheckoutNotification(false, error.message || 'Hubo un error al enviar tu solicitud. Por favor, inténtalo de nuevo.');
      }
    } finally {
      // Reset button state
      if (submitButton) {
        submitButton.disabled = false;
        submitButton.textContent = originalButtonText;
        submitButton.style.opacity = '1';
      }
    }
  });
  
  // Modal functions
  function openCheckoutModal() {
    const modal = document.getElementById('checkout-modal');
    if (modal) {
      modal.classList.remove('hidden');
      document.body.style.overflow = 'hidden';
    }
  }
  
  function closeCheckoutModal() {
    const modal = document.getElementById('checkout-modal');
    if (modal) {
      modal.classList.add('hidden');
      document.body.style.overflow = 'auto';
    }
  }
  
  // Close modal when clicking outside
  const modal = document.getElementById('checkout-modal');
  if (modal) {
    modal.addEventListener('click', function(e) {
      if (e.target === this) {
        closeCheckoutModal();
      }
    });
  }
  
  // Close modal when clicking the close button
  const closeButton = document.getElementById('closeCheckoutModal');
  if (closeButton) {
    closeButton.addEventListener('click', closeCheckoutModal);
  }
  
  // Make functions globally available
  window.openCheckoutModal = openCheckoutModal;
  window.closeCheckoutModal = closeCheckoutModal;
</script>
